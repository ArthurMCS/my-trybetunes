{"version":3,"sources":["services/userAPI.js","components/Loading.js","pages/Login.js","services/searchAlbumsAPI.js","components/Footer.js","pages/Search.js","services/favoriteSongsAPI.js","components/MusicCard.js","services/musicsAPI.js","pages/Album.js","pages/Favorites.js","images/img.png","pages/Profile.js","pages/ProfileEdit.js","pages/NotFound.js","components/Header.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","LoadingStyled","styled","div","Container","Loading","isMusicCard","isHeader","className","id","LoginStyled","FormStyled","form","Login","history","useState","userName","setUserName","isLoading","setIsLoading","useEffect","onSubmit","e","a","preventDefault","push","type","onChange","target","value","placeholder","maxLength","disabled","length","color","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","FooterStyled","Footer","to","style","textDecoration","SectionMusics","section","AlbumCard","Search","search","setSearch","artists","setArtists","setArtistName","handleSubmit","onClick","textAlign","index","replace","src","alt","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCardStyled","article","MusicCard","track","setFavoriteSongs","trackName","previewUrl","isChecked","findIndex","c","fetchFavoriteMusics","handleInputCheck","controls","kind","htmlFor","checked","getMusics","request","requestJson","console","log","AlbumStyled","Album","props","musics","setMusics","fetchMusics","params","match","slice","PageFavorites","Favorites","then","text","ProfilePage","ProfileDiv","Profile","setUser","fetchUser","imgDefault","ProfileEdit","newUserName","setNewUserName","newUserEmail","setNewUserEmail","newUserImg","setNewUserImg","newUserDescription","setNewUserDescription","newUser","includes","NotFound","Component","HeaderStyled","header","Header","setImage","App","exact","path","render","propsRouter","React","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d614149.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\n// https://www.youtube.com/watch?v=zWmaohjrkRw&t=1111s\nconst LoadingStyled = styled.div`\n      width: 80px;\n      height: 80px;\n      border: 15px solid #fc466b;\n      border-top-color: transparent;\n      border-radius: 50%;\n      animation: loading 0.6s  linear infinite ;\n      margin-top: 50px;\n  \n      @keyframes loading { \n        to { \n          transform: rotate(360deg);\n        }\n      }\n`;\n\nconst Container = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n\n      #isHeader {\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 50px;\n        height: 50px;\n        border: 8px solid rgba(63,94,251,1);\n        border-top-color: transparent;\n        border-radius: 50%;\n        margin-bottom: 50px\n      }\n      \n      .isMusicCard {\n        width: 30px;\n        height: 30px;\n        border: 8px solid #fc466b;\n        border-top-color: transparent;\n        border-radius: 50%;\n        margin-left: 400px;\n        margin-top: 15px;\n\n        @media (max-width: 1000px) {\n           margin-left: 0px;\n           margin-top: 120px;\n        }\n\n      }\n\n`;\n\nexport default function Loading({ isMusicCard, isHeader }) {\n  return (\n    <Container>\n      <LoadingStyled\n        className={ isMusicCard && 'isMusicCard' }\n        id={ isHeader && 'isHeader' }\n      />\n    </Container>\n  );\n}\n\nLoading.propTypes = {\n  isMusicCard: PropTypes.bool.isRequired,\n}.isRequired;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Button, Input } from 'reactstrap';\nimport { createUser } from '../services/userAPI';\nimport Loading from '../components/Loading';\n\nconst LoginStyled = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin-top: 15%;\n      \n      @media (max-width: 800px) {\n      \n         form {\n           height: 250px;\n           width: 300px;\n           margin-top: 20%;\n         }\n\n      }\n`;\n\nconst FormStyled = styled.form`\n      display: flex;\n      background: rgb(63,94,251);\n      background: radial-gradient(circle, \n        rgba(63,94,251,1) 0%, \n        rgba(252,70,107,1) 100%);\n      height: 300px;\n      width: 500px;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      border-radius: 5%;\n\n      h1 {\n        margin-bottom: 20px;\n      }\n\n      Input {\n        width: 300px;\n      }\n\n      Button {\n        margin-top: 20px;\n        width: 300px;\n      }\n\n      @media (max-width: 1000px) {\n        input {\n          width: 200px;\n        }\n\n        button {\n          width: 200px;\n        }\n`;\n\nexport default function Login({ history }) {\n  const [userName, setUserName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const minLength = 3;\n\n  const handleInputName = ({ target }) => {\n    setUserName(target.value);\n  };\n\n  useEffect(() => () => {\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <LoginStyled data-testid=\"page-login\">\n      {isLoading\n        ? <Loading />\n        : (\n          <FormStyled\n            onSubmit={ async (e) => {\n              e.preventDefault();\n              setIsLoading(true);\n              await createUser({ name: userName });\n              setIsLoading(false);\n              history.push('/search');\n            } }\n          >\n            <h1>TRYBETUNES</h1>\n            <Input\n              type=\"text\"\n              data-testid=\"login-name-input\"\n              onChange={ handleInputName }\n              value={ userName }\n              placeholder=\"nome\"\n              maxLength=\"15\"\n            />\n            <Button\n              disabled={ userName.length < minLength }\n              type=\"submit\"\n              data-testid=\"login-submit-button\"\n              color=\"primary\"\n            >\n              Entrar\n            </Button>\n          </FormStyled>\n        )}\n    </LoginStyled>\n\n  );\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?enitity=album&term=${artistNameURL}`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React from 'react';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport { BsHeartFill } from 'react-icons/bs';\nimport { CgProfile } from 'react-icons/cg';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst FooterStyled = styled.div`\n        display: none;\n         @media (max-width: 1000px) {\n             display: flex;\n             align-items: center;\n             position: fixed;\n             bottom: 0;\n             justify-content: space-around;\n             width: 100%;\n             height: 50px;\n             background: rgb(63,94,251);\n             background: radial-gradient(circle, rgba(63,94,251,1) \n             0%, rgba(252,70,107,1) 100%);\n             border-radius: 8px 8px 0px 0px;\n\n             .link {\n                 color: black;\n             }\n\n             svg {\n                 height: 25px;\n                 width: 25px;\n             }\n         }\n `;\n\nexport default function Footer() {\n  return (\n    <FooterStyled>\n      <Link\n        to=\"/search\"\n        style={ { textDecoration: 'none' } }\n        className=\"link\"\n      >\n        <BiSearchAlt />\n      </Link>\n      <Link\n        to=\"/favorites\"\n        style={ { textDecoration: 'none' } }\n        className=\"link\"\n      >\n        <BsHeartFill />\n      </Link>\n      <Link\n        to=\"/profile\"\n        style={ { textDecoration: 'none' } }\n        className=\"link\"\n      >\n        <CgProfile />\n      </Link>\n    </FooterStyled>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Button, Input } from 'reactstrap';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport Loading from '../components/Loading';\nimport Footer from '../components/Footer';\n\nconst SectionMusics = styled.section`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-wrap: wrap;\n\n      & .musicCard:hover {\n        box-shadow: 0px 1px 5px 5px #7B68EE;\n        cursor: pointer;\n      }\n`;\n\nconst AlbumCard = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      height: 300px;\n      width: 300px;\n      background: rgb(63,94,251);\n      background: radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 100%);\n      margin: 30px;\n      border-radius: 20%;\n      overflow: hidden;\n\n      img {\n        height: 150px;\n        width: 150px;\n        border: 5px solid black;\n        margin-bottom: 20px;\n      }\n\n      .link {\n        text-align: center;\n        font-size: 20px;\n        color: #111;\n      }\n\n      h4 {\n        width: 250px;;\n        word-wrap: break-word;\n        color: black;\n      }\n`;\n\nconst FormStyled = styled.form`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n\n      Input {\n        margin-top: 50px;\n        width:500px;\n      }\n\n      Button {\n        background-color: #7B68EE;\n        margin-top: 15px;\n        width:500px;\n        border: none;\n      }\n\n      Button:hover {\n        background-color: #4B0082;\n        border: none;\n      }\n\n      h3 {\n        margin-top: 60px;\n        background: -webkit-linear-gradient( rgba(252,70,107,1), rgba(63,94,251,1));\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n      }\n\n      @media (max-width: 1000px) {\n        input {\n          width: 200px;\n        }\n\n        button {\n          width: 200px;\n        }\n\n        h3 {\n          width: 300px;\n          display: block;\n          margin-right: auto;\n          margin-left: auto;\n          word-wrap: break-word;\n        }\n\n        .noAlbum {\n          text-align: center;\n        }\n      }\n`;\n\nexport default function Search() {\n  const [search, setSearch] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [artists, setArtists] = useState([]);\n  const [artistName, setArtistName] = useState('');\n\n  const minLength = 2;\n\n  const handleInputSearch = ({ target }) => {\n    setSearch(target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    const response = await searchAlbumsAPI(search);\n    setSearch('');\n    setArtists(response);\n    setIsLoading(false);\n  };\n\n  const renderAlbuns = () => (\n    <section style={ { textAlign: 'center' } }>\n      <h3>{`Resultado de álbuns de: ${artistName}`}</h3>\n      <SectionMusics>\n        {\n          artists.map((artist, index) => (\n            <Link\n              data-testid={ `link-to-album-${artist.collectionId}` }\n              to={ `/album/${artist.collectionId}` }\n              style={ { textDecoration: 'none' } }\n              className=\"link\"\n              replace\n              key={ index }\n            >\n              <AlbumCard\n                className=\"musicCard\"\n              >\n                <img src={ artist.artworkUrl100 } alt={ artist.artistName } />\n                <h4>{artist.collectionName}</h4>\n              </AlbumCard>\n            </Link>\n          ))\n        }\n      </SectionMusics>\n    </section>);\n\n  return (\n    <div data-testid=\"page-search\">\n      {isLoading\n        ? <Loading />\n        : (\n          <FormStyled onSubmit={ handleSubmit }>\n            <Input\n              type=\"text\"\n              data-testid=\"search-artist-input\"\n              value={ search }\n              onChange={ handleInputSearch }\n              placeholder=\"música ou artista\"\n            />\n            <Button\n              disabled={ search.length < minLength }\n              type=\"submit\"\n              data-testid=\"search-artist-button\"\n              onClick={ () => setArtistName(search) }\n            >\n              Pesquisar\n            </Button>\n            {artists.length === 0\n              ? <h3 className=\"noAlbum\">Nenhum álbum foi encontrado</h3>\n              : renderAlbuns()}\n          </FormStyled>)}\n      <Footer />\n    </div>\n  );\n}\n\nSearch.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { AiFillHeart, AiOutlineHeart } from 'react-icons/ai';\nimport Loading from './Loading';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nconst MusicCardStyled = styled.article`\n      margin-bottom: 50px;;\n  \n      svg {\n        height: 30px;\n        width: 30px;\n        margin-left: 400px;\n        color: red;\n        margin-top: 15px;;\n      }\n\n      svg:hover {\n        cursor: pointer;\n      }\n\n      input {\n        display: none;\n      }\n\n      div {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      audio {\n        position: absolute;\n      }\n\n      p {\n        margin-top: 30px;\n        margin-bottom: 30px;\n      }\n\n      audio::-webkit-media-controls-panel {\n        background: rgb(63,94,251);\n        background: radial-gradient(circle, \n          rgba(63,94,251,1) 0%, \n          rgba(252,70,107,1) 100%);\n      }\n\n      @media (max-width: 1000px) {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n        width: 360px;\n        margin-bottom: 65px;\n         \n        svg {\n          position: relative;\n          margin-left: 0px;\n          margin-top: 120px;\n        }\n\n        p {\n          font-size: 20px;\n          width: 320px;\n          overflow: hidden;\n          max-height: 80px;\n          margin-bottom: -30px;\n        }\n          \n        }\n      \n`;\n\nexport default function MusicCard({ track }) {\n  const [favoriteSongs, setFavoriteSongs] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { trackName, previewUrl, trackId } = track;\n  const n = -1;\n\n  const isChecked = favoriteSongs.findIndex((c) => c.trackId === trackId) !== n;\n\n  const fetchFavoriteMusics = async () => {\n    const response = await getFavoriteSongs();\n    setFavoriteSongs(response);\n  };\n\n  const handleInputCheck = async () => {\n    if (isChecked) {\n      setIsLoading(true);\n      await removeSong(track);\n    } else {\n      setIsLoading(true);\n      await addSong(track);\n    }\n    await fetchFavoriteMusics();\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchFavoriteMusics();\n  }, [favoriteSongs]);\n\n  useEffect(() => () => {\n    setIsLoading(false);\n    setFavoriteSongs([]);\n  }, []);\n\n  return (\n    <MusicCardStyled>\n      <p>{trackName}</p>\n      <div>\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <track kind=\"captions\" />\n          <code>audio</code>\n        </audio>\n        {\n          isLoading\n            ? <Loading isMusicCard />\n            : (\n              <label htmlFor={ trackId }>\n                {isChecked\n                  ? <AiFillHeart />\n                  : <AiOutlineHeart />}\n                <input\n                  checked={ isChecked }\n                  data-testid={ `checkbox-music-${trackId}` }\n                  type=\"checkbox\"\n                  id={ trackId }\n                  onChange={ handleInputCheck }\n                />\n              </label>\n            )\n        }\n      </div>\n    </MusicCardStyled>\n  );\n}\n\nMusicCard.propTypes = {\n  previewUrl: PropTypes.string,\n  trackName: PropTypes.string,\n}.isRequired;\n","const getMusics = async (id) => {\n  try {\n    const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n    const requestJson = await request.json();\n    return requestJson.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport default getMusics;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes, { object } from 'prop-types';\nimport styled from 'styled-components';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport Loading from '../components/Loading';\nimport Footer from '../components/Footer';\n\nconst AlbumStyled = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      text-align: center;\n\n      h2 {\n        margin-top: 200px;\n        text-align: center;\n        color: rgb(63,94,251)\n      }\n\n\n      p {\n        margin-top: 15px;\n        font-size: 25px;\n      }\n\n\n      img {\n        margin-top: 50px;\n        height: 200px;\n        width: 200px;\n        border-radius: 50%;\n        border: 8px solid rgb(63,94,251);\n        margin-bottom: 20px;\n      }\n\n      @media (max-width: 1000px) {\n\n        h1 {\n          text-align: center;\n          max-width: 300px;\n          word-wrap: break-word;\n          overflow: hidden;\n          color: rgb(63,94,251);\n        }\n\n        h2 {\n          margin-top: 200px;\n          text-align: center;\n          max-width: 300px;\n          font-size: 20px;\n          word-wrap: break-word;\n          color: rgb(63,94,251);\n        }\n        \n\n        .album-name {\n          text-align: center;\n          word-wrap: break-word;\n          max-width: 300px;\n          color: rgb(63,94,251);\n        }\n\n      }\n\n`;\n\nexport default function Album(props) {\n  const [musics, setMusics] = useState([]);\n\n  useEffect(() => {\n    const fetchMusics = async () => {\n      const { match: { params } } = props;\n      const { id } = params;\n      const response = await getMusics(id);\n      setMusics(response);\n    };\n    fetchMusics();\n  }, [props]);\n\n  return (\n    <div data-testid=\"page-album\">\n      {\n        musics && musics.length === 0\n          ? <Loading />\n          : (\n            <AlbumStyled>\n              { !musics\n                ? <h2>Desculpe, não conseguimos encontrar esse álbum</h2>\n                : (\n                  <>\n                    <section>\n                      <img\n                        src={ musics[0].artworkUrl100 }\n                        alt={ musics[0].collectionName }\n                      />\n                      <h1 data-testid=\"artist-name\">{musics[0].artistName}</h1>\n                      <p\n                        data-testid=\"album-name\"\n                        className=\"album-name\"\n                      >\n                        {musics[0].collectionName}\n                      </p>\n                    </section>\n                    <section>\n                      {musics.slice(1).map((track) => (\n                        <MusicCard\n                          key={ track.trackId }\n                          track={ track }\n                        />\n                      ))}\n                    </section>\n                  </>\n                )}\n\n            </AlbumStyled>\n          )\n      }\n      <Footer />\n    </div>\n  );\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape(object),\n}.isRequired;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport MusicCard from '../components/MusicCard';\nimport Footer from '../components/Footer';\nimport Loading from '../components/Loading';\n\nconst PageFavorites = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      text-align: center;\n      flex-direction: column;\n      margin-bottom: 60px;\n\n      p {\n        font-size: 20px;\n      }\n\n      /* https://css-tricks.com/snippets/css/gradient-text/ */\n      .favoritesP {\n        margin-top: 15px;\n        font-size: 25px;\n        background: -webkit-linear-gradient( rgba(252,70,107,1), rgba(63,94,251,1));\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n      }\n`;\n\nexport default function Favorites() {\n  const [favoriteSongs, setFavoriteSongs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchFavoriteMusics = async () => {\n    const response = await getFavoriteSongs();\n    setFavoriteSongs(response);\n  };\n\n  useEffect(() => {\n    fetchFavoriteMusics()\n      .then(() => setIsLoading(false));\n  }, []);\n\n  useEffect(() => {\n    fetchFavoriteMusics();\n  }, [favoriteSongs]);\n\n  useEffect(() => () => {\n    setFavoriteSongs([]);\n    setIsLoading({});\n  }, []);\n\n  const text = (\n    favoriteSongs.length === 1\n      ? '1 Música curtida'\n      : `${favoriteSongs.length} Músicas curtidas`\n  );\n\n  return (\n    <PageFavorites data-testid=\"page-favorites\">\n      {isLoading\n        ? <Loading />\n        : (\n          <>\n            {favoriteSongs.length > 0\n              ? <p className=\"favoritesP\">{text}</p>\n              : <p className=\"favoritesP\">Ainda não há músicas curtidas</p>}\n            {favoriteSongs.map((track) => (\n              <MusicCard\n                key={ track.trackId }\n                track={ track }\n              />\n            ))}\n          </>)}\n      <Footer />\n    </PageFavorites>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/img.3bbfa889.png\";","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../services/userAPI';\nimport Loading from '../components/Loading';\nimport imgDefault from '../images/img.png';\nimport Footer from '../components/Footer';\n\nconst ProfilePage = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n`;\n\nconst ProfileDiv = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      margin-top: 100px;;\n      width: 800px;\n      text-align: center;\n      word-wrap: break-word;\n\n      label {\n        font-size: 25px;\n        color: #7B68EE;\n      }\n\n      p {\n        margin-top: 30px;\n        margin-bottom: 30px;\n        text-align: justify;\n        max-width: 600px;\n      }\n\n      img {\n        height: 200px;\n        width: 200px;\n        border-radius: 50%;\n        margin-bottom: 30px;\n        border: 3px solid  #7B68EE;\n      }\n\n      Button {\n        width: 150px;\n        border: none;\n        background-color: #7B68EE;\n        margin-top: 50px;\n        margin-bottom: 20px;;\n      }\n\n      Button:hover {\n        border: none;\n        background-color: #4B0082;\n      }\n\n      .exitButton {\n          width: 150px;\n          margin-top: 15px;\n          margin-bottom: 80px;\n        }\n\n      @media (max-width: 1000px) {\n        margin-top: 50px;\n        p {\n        font-size: 25px;\n        margin-top: 30px;\n        margin-bottom: 30px;\n        text-align: justify;\n        max-width: 290px;\n        word-wrap: break-word\n        }\n\n        img {\n        height: 80px;\n        width: 80px;\n        border-radius: 50%;\n        margin-bottom: 30px;\n        border: 3px solid  #7B68EE;\n        }\n\n        Button {\n        border: none;\n        background-color: #7B68EE;\n        margin-top: 30px;\n        margin-bottom: 0px;\n        }\n\n      }\n\n`;\n\nexport default function Profile({ history }) {\n  const [user, setUser] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchUser = async () => {\n    setIsLoading(true);\n    const response = await getUser();\n    setUser(response);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  return (\n    <ProfilePage data-testid=\"page-profile\">\n      {\n        isLoading\n          ? <Loading />\n          : (\n            <ProfileDiv>\n              <img\n                src={\n                  user.image === ''\n                    ? imgDefault\n                    : user.image\n                }\n                alt=\"user\"\n                data-testid=\"profile-image\"\n              />\n              <label htmlFor=\"userName\">\n                Nome:\n                <p id=\"userName\">\n                  {user.name}\n                </p>\n              </label>\n              <label htmlFor=\"userEmail\">\n                E-mail:\n                <p id=\"userEmail\">\n                  {user.email}\n                </p>\n              </label>\n              <label htmlFor=\"userDescription\">\n                Descrição:\n                <p id=\"userDescription\">\n                  {user.description}\n                </p>\n              </label>\n              <Button\n                onClick={ () => { history.push('/profile/edit'); } }\n              >\n                Editar perfil\n              </Button>\n              <Button\n                className=\"exitButton\"\n                onClick={ () => { history.push('/'); } }\n              >\n                Sair\n              </Button>\n            </ProfileDiv>\n          )\n      }\n      <Footer />\n    </ProfilePage>\n  );\n}\n\nProfile.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Button, Input } from 'reactstrap';\nimport { getUser, updateUser } from '../services/userAPI';\nimport Loading from '../components/Loading';\nimport Footer from '../components/Footer';\n\nconst FormStyled = styled.form`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n\n      Input {\n        width: 400px;\n        margin-bottom: 30px;\n      }\n\n      label {\n        font-size: 25px;\n        margin-top: 20px;\n        color: #fff;\n        margin-left: 10px;\n        margin-bottom: 5px;;\n      }\n\n      Button {\n        border: none;\n        background-color: #7B68EE;\n        margin-top: 70px;\n        margin-bottom: 40px;\n        width: 400px;\n      }\n\n      Button:hover {\n        border: none;\n        background-color: #4B0082;\n      }\n\n      .description { \n        width: 400px;\n        height: 100px;\n      }\n\n      @media (max-width: 1000px) {\n        input {\n          width: 200px;\n        }\n\n        .description {\n          width: 200px;\n        }\n\n        button {\n          margin-top: 50px;\n          margin-bottom: 100px;\n          width: 200px;\n        }\n      }\n\n`;\n\nexport default function ProfileEdit({ history }) {\n  const [newUserName, setNewUserName] = useState('');\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [newUserImg, setNewUserImg] = useState('');\n  const [newUserDescription, setNewUserDescription] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    const newUser = {\n      name: newUserName,\n      email: newUserEmail,\n      image: newUserImg,\n      description: newUserDescription,\n    };\n    await updateUser(newUser);\n    setIsLoading(false);\n    history.push('/profile');\n  };\n\n  const fetchUser = async () => {\n    setIsLoading(true);\n    const response = await getUser();\n    setNewUserName(response.name);\n    setNewUserEmail(response.email);\n    setNewUserImg(response.image);\n    setNewUserDescription(response.description);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  useEffect(() => () => {\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <div data-testid=\"page-profile-edit\">\n      {isLoading ? <Loading /> : (\n        <FormStyled onSubmit={ handleSubmit }>\n          <label htmlFor=\"input-name\">\n            Nome\n          </label>\n          <Input\n            type=\"text\"\n            value={ newUserName }\n            onChange={ ({ target }) => setNewUserName(target.value) }\n            data-testid=\"edit-input-name\"\n            id=\"input-name\"\n            maxLength=\"15\"\n          />\n          <label htmlFor=\"input-email\">\n            Email\n          </label>\n          <Input\n            type=\"email\"\n            value={ newUserEmail }\n            onChange={ ({ target }) => setNewUserEmail(target.value) }\n            data-testid=\"edit-input-email\"\n            id=\"input-email\"\n          />\n          <label htmlFor=\"input-image\">\n            URL da imagem\n          </label>\n          <Input\n            type=\"text\"\n            value={ newUserImg }\n            onChange={ ({ target }) => setNewUserImg(target.value) }\n            data-testid=\"edit-input-image\"\n            id=\"input-image\"\n          />\n          <label htmlFor=\"input-description\">\n            Descrição\n          </label>\n          <Input\n            className=\"description\"\n            type=\"textarea\"\n            value={ newUserDescription }\n            onChange={ ({ target }) => setNewUserDescription(target.value) }\n            data-testid=\"edit-input-description\"\n            id=\"input-description\"\n          />\n          <Button\n            type=\"submit\"\n            data-testid=\"edit-button-save\"\n            disabled={\n              newUserName.length === 0\n              || !newUserEmail.includes('@')\n              || !newUserEmail.includes('.com')\n              || newUserImg.length === 0\n              || newUserDescription.length === 0\n            }\n          >\n            Salvar\n          </Button>\n        </FormStyled>\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nProfileEdit.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\" />\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { getUser } from '../services/userAPI';\nimport Loading from './Loading';\nimport imgDefault from '../images/img.png';\n\nconst HeaderStyled = styled.header`\n      display: flex;\n      align-items: center;\n      justify-content: space-around;\n      background: rgb(63,94,251);\n      background: radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 100%);\n      height: 100px;\n\n      h2 {\n        font-size: 50px; \n        color: black;\n      }\n\n      h3 {\n        margin-top: 10px;\n        color: black;\n      }\n\n      nav {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .link {\n        color: black;\n        font-size: 35px;\n        margin-right: 20px;\n        margin-left: 20px;\n        transition: all 0.6s ease;\n      }\n\n\n      div {\n       display: flex;\n       align-items: center;\n       justify-content: center;\n       width: 300px;\n      }\n\n      img {\n        border: 1px solid black;\n        border-radius: 50%;\n        width: 60px;\n        height: 60px;\n        margin-right: 15px;\n        margin-top: 5px;;\n      }\n\n      .link:hover {\n        color: #fff;\n      }\n\n      @media (max-width: 1000px) {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n        height: 60px;\n        border-radius: 0px 0px 8px 8px;\n\n        nav {\n          display: none\n        }\n\n        h2 {\n          margin-top: 10px;\n          font-size: 30px;\n        }\n\n        div {\n          display: none;\n        }\n      }\n`;\n\nexport default function Header() {\n  const [user, setUser] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [image, setImage] = useState('');\n\n  const fetchUser = async () => {\n    setIsLoading(true);\n    const response = await getUser();\n    setUser(response);\n    setImage(response.image);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  useEffect(() => () => {\n    setUser('');\n    setIsLoading(false);\n    setImage('');\n  }, []);\n\n  return (\n    <header data-testid=\"header-component\">\n      <HeaderStyled>\n        <h2>TrybeTunes</h2>\n        <nav>\n          <Link\n            data-testid=\"link-to-search\"\n            to=\"/search\"\n            style={ { textDecoration: 'none' } }\n            className=\"link\"\n          >\n            Pesquisar\n          </Link>\n          <Link\n            data-testid=\"link-to-favorites\"\n            to=\"/favorites\"\n            style={ { textDecoration: 'none' } }\n            className=\"link\"\n          >\n            Músicas Favoritas\n          </Link>\n          <Link\n            data-testid=\"link-to-profile\"\n            to=\"/profile\"\n            style={ { textDecoration: 'none' } }\n            className=\"link\"\n          >\n            Perfil\n          </Link>\n        </nav>\n        {\n          isLoading\n            ? <Loading isHeader />\n            : (\n              <div>\n                <img\n                  src={\n                    image === ''\n                      ? imgDefault\n                      : image\n                  }\n                  alt=\"profile\"\n                />\n                <h3 data-testid=\"header-user-name\">{user.name}</h3>\n              </div>\n            )\n        }\n      </HeaderStyled>\n    </header>\n  );\n}\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Search from './pages/Search';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport NotFound from './pages/NotFound';\nimport Header from './components/Header';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Route\n          exact\n          path=\"/\"\n          render={ (propsRouter) => <Login { ...propsRouter } /> }\n        />\n        <Route\n          path=\"/search\"\n          render={ (propsRouter) => (\n            <>\n              <Header />\n              <Search { ...propsRouter } />\n            </>\n          ) }\n        />\n        <Route\n          path=\"/album/:id\"\n          render={ (propsRouter) => (\n            <>\n              <Header />\n              <Album { ...propsRouter } />\n            </>\n          ) }\n        />\n        <Route\n          path=\"/favorites\"\n          render={ () => (\n            <>\n              <Header />\n              <Favorites />\n            </>\n          ) }\n        />\n        <Route\n          exact\n          path=\"/profile\"\n          render={ (propsRouter) => (\n            <>\n              <Header />\n              <Profile { ...propsRouter } />\n            </>) }\n        />\n        <Route\n          exact\n          path=\"/profile/edit\"\n          render={ (propsRouter) => (\n            <>\n              <Header />\n              <ProfileEdit { ...propsRouter } />\n            </>) }\n        />\n        <Route\n          path=\"*\"\n          render={ () => <NotFound /> }\n        />\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}