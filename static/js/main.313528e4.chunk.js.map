{"version":3,"sources":["services/userAPI.js","pages/Loading.js","pages/Login.js","services/searchAlbumsAPI.js","pages/Search.js","services/favoriteSongsAPI.js","components/MusicCard.js","services/musicsAPI.js","pages/Album.js","pages/Favorites.js","images/img.png","pages/Profile.js","pages/ProfileEdit.js","pages/NotFound.js","components/Header.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","LoadingStyled","styled","div","Container","Loading","isMusicCard","className","LoginStyled","FormStyled","form","Login","history","useState","userName","setUserName","isLoading","setIsLoading","useEffect","onSubmit","e","a","preventDefault","push","type","onChange","target","value","placeholder","maxLength","disabled","length","color","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","SectionMusics","section","MusicCard","Search","search","setSearch","artists","setArtists","setArtistName","handleSubmit","onClick","style","textAlign","index","src","alt","to","textDecoration","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCardStyled","article","track","setFavoriteSongs","trackName","previewUrl","isChecked","findIndex","c","fetchFavoriteMusics","handleInputCheck","controls","kind","htmlFor","checked","id","getMusics","request","requestJson","AlbumStyled","Album","props","musics","setMusics","fetchMusics","params","match","slice","PageFavorites","Favorites","FavoritesPage","ProfileDiv","Profile","setUser","fetchUser","imgDefault","ProfileEdit","newUserName","setNewUserName","newUserEmail","setNewUserEmail","newUserImg","setNewUserImg","newUserDescription","setNewUserDescription","newUser","includes","NotFound","Component","HeaderStyled","header","Header","setImage","App","exact","path","render","propsRouter","React","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.313528e4.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\n// https://www.youtube.com/watch?v=zWmaohjrkRw&t=1111s\nconst LoadingStyled = styled.div`\n      width: 80px;\n      height: 80px;\n      border: 15px solid #4B0082;\n      border-top-color: transparent;\n      border-radius: 50%;\n      animation: loading 0.6s  linear infinite ;\n      margin-top: 50px;\n\n  \n      @keyframes loading { \n        to { \n          transform: rotate(360deg);\n        }\n      }\n`;\n\nconst Container = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      \n      .isMusicCard {\n        width: 30px;\n        height: 30px;\n        border: 8px solid #4B0082;\n        border-top-color: transparent;\n        border-radius: 50%;\n        margin-left: 450px;\n        margin-top: 15px;\n      }\n\n      p {\n        color: #111;\n      }\n`;\n\nexport default function Loading({ isMusicCard }) {\n  return (\n    <Container>\n      <LoadingStyled className={ isMusicCard && 'isMusicCard' } />\n      {/* <p>Carregando...</p> */}\n    </Container>\n  );\n}\n\nLoading.propTypes = {\n  isMusicCard: PropTypes.bool.isRequired,\n}.isRequired;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Button, Input } from 'reactstrap';\nimport { createUser } from '../services/userAPI';\nimport Loading from './Loading';\n\nconst LoginStyled = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin-top: 15%;\n`;\n\nconst FormStyled = styled.form`\n      display: flex;\n      background-color: #4B0082;\n      height: 300px;\n      width: 500px;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      border-radius: 5%;\n\n      h1 {\n        margin-bottom: 20px;\n      }\n\n      Input {\n        width: 300px;\n      }\n\n      Button {\n        margin-top: 20px;\n        width: 300px;\n      }\n`;\n\nexport default function Login({ history }) {\n  const [userName, setUserName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const minLength = 3;\n\n  const handleInputName = ({ target }) => {\n    setUserName(target.value);\n  };\n\n  useEffect(() => () => {\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <LoginStyled data-testid=\"page-login\">\n      {isLoading\n        ? <Loading />\n        : (\n          <FormStyled\n            onSubmit={ async (e) => {\n              e.preventDefault();\n              setIsLoading(true);\n              await createUser({ name: userName });\n              setIsLoading(false);\n              history.push('/search');\n            } }\n          >\n            <h1>TRYBETUNES</h1>\n            <Input\n              type=\"text\"\n              data-testid=\"login-name-input\"\n              onChange={ handleInputName }\n              value={ userName }\n              placeholder=\"nome\"\n              maxLength=\"15\"\n            />\n            <Button\n              disabled={ userName.length < minLength }\n              type=\"submit\"\n              data-testid=\"login-submit-button\"\n              color=\"primary\"\n            >\n              Entrar\n            </Button>\n          </FormStyled>\n        )}\n    </LoginStyled>\n\n  );\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?enitity=album&term=${artistNameURL}`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Button, Input } from 'reactstrap';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport Loading from './Loading';\n\nconst SectionMusics = styled.section`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-wrap: wrap;\n\n      & .musicCard:hover {\n        box-shadow: 0px 1px 5px 5px #7B68EE;\n        cursor: pointer;\n      }\n`;\n\nconst MusicCard = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      height: 300px;\n      width: 300px;\n      background-color:  #4B0082;\n      margin: 30px;\n      border-radius: 20%;\n\n      img {\n        height: 150px;\n        width: 150px;\n        border: 5px solid black;\n        margin-bottom: 20px;\n      }\n\n      .link {\n        text-align: center;\n        font-size: 20px;\n        color: #111;\n      }\n`;\n\nconst FormStyled = styled.form`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n\n      Input {\n        margin-top: 50px;\n        width:500px;\n      }\n\n      Button {\n        background-color: #7B68EE;\n        margin-top: 15px;\n        width:500px;\n        border: none;\n      }\n\n      Button:hover {\n        background-color: #4B0082;\n        border: none;\n      }\n\n      h3 {\n        margin-top: 60px;\n        color: #fff;\n      }\n`;\n\nexport default function Search({ history }) {\n  const [search, setSearch] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [artists, setArtists] = useState([]);\n  const [artistName, setArtistName] = useState('');\n\n  const minLength = 2;\n\n  const handleInputSearch = ({ target }) => {\n    setSearch(target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    const response = await searchAlbumsAPI(search);\n    setSearch('');\n    setArtists(response);\n    setIsLoading(false);\n  };\n\n  const renderAlbuns = () => (\n    <section style={ { textAlign: 'center' } }>\n      <h3>{`Resultado de álbuns de: ${artistName}`}</h3>\n      <SectionMusics>\n        {\n          artists.map((artist, index) => (\n            <MusicCard\n              key={ index }\n              className=\"musicCard\"\n              onClick={ () => history.push(`/album/${artist.collectionId}`) }\n            >\n              <img src={ artist.artworkUrl100 } alt={ artist.artistName } />\n              <Link\n                data-testid={ `link-to-album-${artist.collectionId}` }\n                to={ `/album/${artist.collectionId}` }\n                style={ { textDecoration: 'none' } }\n                className=\"link\"\n              >\n                <h4>{artist.collectionName}</h4>\n              </Link>\n            </MusicCard>\n          ))\n        }\n      </SectionMusics>\n    </section>);\n\n  return (\n    <div data-testid=\"page-search\">\n      {isLoading\n        ? <Loading />\n        : (\n          <FormStyled onSubmit={ handleSubmit }>\n            <Input\n              type=\"text\"\n              data-testid=\"search-artist-input\"\n              value={ search }\n              onChange={ handleInputSearch }\n            />\n            <Button\n              disabled={ search.length < minLength }\n              type=\"submit\"\n              data-testid=\"search-artist-button\"\n              onClick={ () => setArtistName(search) }\n            >\n              Pesquisar\n            </Button>\n            {artists.length === 0\n              ? <h3>Nenhum álbum foi encontrado</h3>\n              : renderAlbuns()}\n          </FormStyled>)}\n    </div>\n  );\n}\n\nSearch.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { AiFillHeart, AiOutlineHeart } from 'react-icons/ai';\nimport Loading from '../pages/Loading';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nconst MusicCardStyled = styled.article`\n      margin-bottom: 50px;;\n  \n      label {\n        color: #111;\n        margin-left: 400px;\n      }\n\n      svg {\n        height: 30px;\n        width: 30px;\n        color: red;\n        margin-top: 15px;;\n      }\n\n      svg:hover {\n        cursor: pointer;\n      }\n\n      input {\n        display: none;\n      }\n\n      div {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      audio {\n        position: absolute;\n      }\n\n      p {\n        margin-top: 30px;\n        margin-bottom: 30px;\n      }\n\n      audio::-webkit-media-controls-panel {\n                background-color: #7B68EE;\n      }\n`;\n\nexport default function MusicCard({ track }) {\n  const [favoriteSongs, setFavoriteSongs] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { trackName, previewUrl, trackId } = track;\n  const n = -1;\n\n  const isChecked = favoriteSongs.findIndex((c) => c.trackId === trackId) !== n;\n\n  const fetchFavoriteMusics = async () => {\n    const response = await getFavoriteSongs();\n    setFavoriteSongs(response);\n  };\n\n  const handleInputCheck = async () => {\n    if (isChecked) {\n      setIsLoading(true);\n      await removeSong(track);\n    } else {\n      setIsLoading(true);\n      await addSong(track);\n    }\n    await getFavoriteSongs();\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchFavoriteMusics();\n  }, [favoriteSongs]);\n\n  useEffect(() => () => {\n    setIsLoading(false);\n    setFavoriteSongs([]);\n  }, []);\n\n  return (\n    <MusicCardStyled>\n      <p>{trackName}</p>\n      <div>\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <track kind=\"captions\" />\n          <code>audio</code>\n        </audio>\n        {\n          isLoading\n            ? <Loading isMusicCard />\n            : (\n              <label htmlFor={ trackId }>\n                Favorita\n                {isChecked\n                  ? <AiFillHeart />\n                  : <AiOutlineHeart />}\n                <input\n                  checked={ isChecked }\n                  data-testid={ `checkbox-music-${trackId}` }\n                  type=\"checkbox\"\n                  id={ trackId }\n                  onChange={ handleInputCheck }\n                />\n              </label>\n            )\n        }\n      </div>\n    </MusicCardStyled>\n  );\n}\n\nMusicCard.propTypes = {\n  previewUrl: PropTypes.string,\n  trackName: PropTypes.string,\n}.isRequired;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes, { object } from 'prop-types';\nimport styled from 'styled-components';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\n\nconst AlbumStyled = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      text-align: center;\n\n      p {\n        margin-top: 15px;\n        font-size: 25px;\n      }\n\n\n      img {\n        margin-top: 50px;\n        height: 200px;\n        width: 200px;\n        border-radius: 50%;\n        border: 8px solid #4B0082;\n        margin-bottom: 20px;\n      }\n\n`;\n\nexport default function Album(props) {\n  const [musics, setMusics] = useState([]);\n\n  useEffect(() => {\n    const fetchMusics = async () => {\n      const { match: { params } } = props;\n      const { id } = params;\n      const response = await getMusics(id);\n      setMusics(response);\n    };\n    fetchMusics();\n  }, [props]);\n\n  return (\n    <div data-testid=\"page-album\">\n      {\n        musics.length === 0\n          ? <Loading />\n          : (\n            <AlbumStyled>\n              <section>\n                <img src={ musics[0].artworkUrl100 } alt={ musics[0].collectionName } />\n                <h1 data-testid=\"artist-name\">{ musics[0].artistName}</h1>\n                <p data-testid=\"album-name\">{ musics[0].collectionName}</p>\n              </section>\n              <section>\n                {musics.slice(1).map((track) => (\n                  <MusicCard\n                    key={ track.trackId }\n                    track={ track }\n                  />\n                ))}\n              </section>\n            </AlbumStyled>\n          )\n      }\n    </div>\n  );\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape(object),\n}.isRequired;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport MusicCard from '../components/MusicCard';\n\nconst PageFavorites = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      text-align: center;\n      flex-direction: column;\n\n      p {\n        font-size: 25px;\n      }\n`;\n\nexport default function Favorites() {\n  const [favoriteSongs, setFavoriteSongs] = useState([]);\n\n  const fetchFavoriteMusics = async () => {\n    const response = await getFavoriteSongs();\n    setFavoriteSongs(response);\n  };\n\n  useEffect(() => {\n    fetchFavoriteMusics();\n  }, [favoriteSongs]);\n\n  useEffect(() => () => {\n    setFavoriteSongs([]);\n  }, []);\n\n  return (\n    <PageFavorites data-testid=\"page-favorites\">\n      {favoriteSongs.map((track) => (\n        <MusicCard\n          key={ track.trackId }\n          track={ track }\n        />\n      ))}\n    </PageFavorites>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/img.3bbfa889.png\";","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../services/userAPI';\nimport Loading from './Loading';\nimport imgDefault from '../images/img.png';\n\nconst FavoritesPage = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n`;\n\nconst ProfileDiv = styled.div`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      margin-top: 100px;;\n      width: 800px;\n      text-align: center;\n      word-wrap: break-word;\n\n      label {\n        font-size: 25px;\n        color: #7B68EE;\n      }\n\n      p {\n        margin-top: 30px;\n        margin-bottom: 30px;\n        text-align: justify;\n      }\n\n      img {\n        height: 200px;\n        width: 200px;\n        border-radius: 50%;\n        margin-bottom: 30px;\n        border: 3px solid  #7B68EE;\n      }\n\n      Button {\n        border: none;\n        background-color: #7B68EE;\n        margin-top: 50px;\n        margin-bottom: 50px;;\n      }\n\n      Button:hover {\n        border: none;\n        background-color: #4B0082;\n      }\n\n`;\n\nexport default function Profile({ history }) {\n  const [user, setUser] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchUser = async () => {\n    setIsLoading(true);\n    const response = await getUser();\n    setUser(response);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  return (\n    <FavoritesPage data-testid=\"page-profile\">\n      {\n        isLoading\n          ? <Loading />\n          : (\n            <ProfileDiv>\n              <img\n                src={\n                  user.image === ''\n                    ? imgDefault\n                    : user.image\n                }\n                alt=\"user\"\n                data-testid=\"profile-image\"\n              />\n              <label htmlFor=\"userName\">\n                Nome:\n                <p id=\"userName\">\n                  {user.name}\n                </p>\n              </label>\n              <label htmlFor=\"userEmail\">\n                E-mail:\n                <p id=\"userEmail\">\n                  {user.email}\n                </p>\n              </label>\n              <label htmlFor=\"userDescription\">\n                Descrição:\n                <p id=\"userDescription\">\n                  {user.description}\n                </p>\n              </label>\n              <Button\n                onClick={ () => { history.push('/profile/edit'); } }\n              >\n                Editar perfil\n              </Button>\n            </ProfileDiv>\n          )\n      }\n    </FavoritesPage>\n  );\n}\n\nProfile.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Button, Input } from 'reactstrap';\nimport { getUser, updateUser } from '../services/userAPI';\nimport Loading from './Loading';\n\nconst FormStyled = styled.form`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n\n      Input {\n        width: 400px;\n        margin-bottom: 30px;\n      }\n\n      label {\n        font-size: 25px;\n        margin-top: 20px;\n        color: #fff;\n        margin-left: 10px;\n        margin-bottom: 5px;;\n      }\n\n      Button {\n        border: none;\n        background-color: #7B68EE;\n        margin-top: 70px;\n        margin-bottom: 40px;\n        width: 400px;\n      }\n\n      Button:hover {\n        border: none;\n        background-color: #4B0082;\n      }\n\n      .description { \n        width: 400px;\n        height: 100px;\n      }\n\n`;\n\nexport default function ProfileEdit({ history }) {\n  const [newUserName, setNewUserName] = useState('');\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [newUserImg, setNewUserImg] = useState('');\n  const [newUserDescription, setNewUserDescription] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    const newUser = {\n      name: newUserName,\n      email: newUserEmail,\n      image: newUserImg,\n      description: newUserDescription,\n    };\n    await updateUser(newUser);\n    setIsLoading(false);\n    history.push('/profile');\n  };\n\n  const fetchUser = async () => {\n    setIsLoading(true);\n    const response = await getUser();\n    setNewUserName(response.name);\n    setNewUserEmail(response.email);\n    setNewUserImg(response.image);\n    setNewUserDescription(response.description);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  useEffect(() => () => {\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <div data-testid=\"page-profile-edit\">\n      {isLoading ? <Loading /> : (\n        <FormStyled onSubmit={ handleSubmit }>\n          <label htmlFor=\"input-name\">\n            Nome\n          </label>\n          <Input\n            type=\"text\"\n            value={ newUserName }\n            onChange={ ({ target }) => setNewUserName(target.value) }\n            data-testid=\"edit-input-name\"\n            id=\"input-name\"\n            maxLength=\"15\"\n          />\n          <label htmlFor=\"input-email\">\n            Email\n          </label>\n          <Input\n            type=\"email\"\n            value={ newUserEmail }\n            onChange={ ({ target }) => setNewUserEmail(target.value) }\n            data-testid=\"edit-input-email\"\n            id=\"input-email\"\n          />\n          <label htmlFor=\"input-image\">\n            URL da imagem\n          </label>\n          <Input\n            type=\"text\"\n            value={ newUserImg }\n            onChange={ ({ target }) => setNewUserImg(target.value) }\n            data-testid=\"edit-input-image\"\n            id=\"input-image\"\n          />\n          <label htmlFor=\"input-description\">\n            Descrição\n          </label>\n          <Input\n            className=\"description\"\n            type=\"textarea\"\n            value={ newUserDescription }\n            onChange={ ({ target }) => setNewUserDescription(target.value) }\n            data-testid=\"edit-input-description\"\n            id=\"input-description\"\n          />\n          <Button\n            type=\"submit\"\n            data-testid=\"edit-button-save\"\n            disabled={\n              newUserName.length === 0\n              || !newUserEmail.includes('@')\n              || !newUserEmail.includes('.com')\n              || newUserImg.length === 0\n              || newUserDescription.length === 0\n            }\n          >\n            Salvar\n          </Button>\n        </FormStyled>\n      )}\n    </div>\n  );\n}\n\nProfileEdit.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\" />\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { getUser } from '../services/userAPI';\nimport Loading from '../pages/Loading';\nimport imgDefault from '../images/img.png';\n\nconst HeaderStyled = styled.header`\n      display: flex;\n      align-items: center;\n      justify-content: space-around;\n      background: #4B0082;\n      height: 100px;\n\n      h2 {\n        font-size: 50px; \n        color: #fff;\n      }\n\n      h3 {\n        margin-top: 10px;\n        color: #fff\n      }\n\n      .link {\n        color: #fff;\n        font-size: 35px;\n        margin-right: 80px;\n        transition: all 0.6s ease;\n      }\n\n\n      div {\n       display: flex;\n       align-items: center;\n       justify-content: center;\n      }\n\n      img {\n        border: 1px solid black;\n        border-radius: 50%;\n        width: 60px;\n        height: 60px;\n        margin-right: 15px;\n        margin-top: 5px;;\n      }\n\n      .link:hover {\n        color: #1E90FF;\n      }\n`;\n\nexport default function Header() {\n  const [user, setUser] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [image, setImage] = useState('');\n\n  const fetchUser = async () => {\n    setIsLoading(true);\n    const response = await getUser();\n    setUser(response);\n    setImage(response.image);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  return (\n    <header data-testid=\"header-component\">\n      {isLoading\n        ? <Loading />\n        : (\n          <HeaderStyled>\n            <h2>TrybeTunes</h2>\n            <nav>\n              <Link\n                data-testid=\"link-to-search\"\n                to=\"/search\"\n                style={ { textDecoration: 'none' } }\n                className=\"link\"\n              >\n                Pesquisar\n              </Link>\n              <Link\n                data-testid=\"link-to-favorites\"\n                to=\"/favorites\"\n                style={ { textDecoration: 'none' } }\n                className=\"link\"\n              >\n                Músicas Favoritas\n              </Link>\n              <Link\n                data-testid=\"link-to-profile\"\n                to=\"/profile\"\n                style={ { textDecoration: 'none' } }\n                className=\"link\"\n              >\n                Perfil\n              </Link>\n            </nav>\n            <div>\n              <img\n                src={\n                  image === ''\n                    ? imgDefault\n                    : image\n                }\n                alt=\"profile\"\n              />\n              <h3 data-testid=\"header-user-name\">{user.name}</h3>\n            </div>\n          </HeaderStyled>\n        )}\n    </header>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Search from './pages/Search';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport NotFound from './pages/NotFound';\nimport Header from './components/Header';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Route\n          exact\n          path=\"/\"\n          render={ (propsRouter) => <Login { ...propsRouter } /> }\n        />\n        <Route\n          path=\"/search\"\n          render={ (propsRouter) => (\n            <>\n              <Header />\n              <Search { ...propsRouter } />\n            </>\n          ) }\n        />\n        <Route\n          path=\"/album/:id\"\n          render={ (propsRouter) => (\n            <>\n              <Header />\n              <Album { ...propsRouter } />\n            </>\n          ) }\n        />\n        <Route\n          path=\"/favorites\"\n          render={ () => (\n            <>\n              <Header />\n              <Favorites />\n            </>\n          ) }\n        />\n        <Route\n          exact\n          path=\"/profile\"\n          render={ (propsRouter) => (\n            <>\n              <Header />\n              <Profile { ...propsRouter } />\n            </>) }\n        />\n        <Route\n          exact\n          path=\"/profile/edit\"\n          render={ (propsRouter) => (\n            <>\n              <Header />\n              <ProfileEdit { ...propsRouter } />\n            </>) }\n        />\n        <Route\n          path=\"*\"\n          render={ () => <NotFound /> }\n        />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}